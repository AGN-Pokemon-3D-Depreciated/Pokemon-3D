version: 0.54.1.{build}
pull_requests:
  do_not_increment_build_number: true
skip_tags: true
configuration: Release
platform:
- DesktopGL
- XNA
clone_depth: 1
init:
- cmd: git config --global core.autocrlf true
assembly_info:
  patch: true
  file: '**\AssemblyInfo.*'
  assembly_version: '{version}'
  assembly_file_version: '{version}'
  assembly_informational_version: '{version}'
environment:
  GameJolt_API:
    secure: pcggN1zw0wEHy8y0s6dDJtK4cJugjJQIE1jsUkK5BM+Y4MWD4PLIrOdj6clXXKR6oYgshYIhDLHIay6oMXsxzbQDtKlQzmJOWxwDy45ki5Y=
install:
- ps: >-
    Function DownloadFile($url, $targetFile) {
       $uri = New-Object "System.Uri" "$url"
       $request = [System.Net.HttpWebRequest]::Create($uri)
       $request.set_Timeout(15000)
       $response = $request.GetResponse()
       $totalLength = [System.Math]::Floor($response.get_ContentLength()/1024)
       $responseStream = $response.GetResponseStream()
       $targetStream = New-Object -TypeName System.IO.FileStream -ArgumentList $targetFile, Create
       $buffer = new-object byte[] 10KB
       $count = $responseStream.Read($buffer,0,$buffer.length)
       $downloadedBytes = $count
       while ($count -gt 0) {
           $targetStream.Write($buffer, 0, $count)
           $count = $responseStream.Read($buffer,0,$buffer.length)
           $downloadedBytes = $downloadedBytes + $count
           Write-Progress -activity "Downloading file '$($url.split('/') | Select -Last 1)'" -status "Downloaded ($([System.Math]::Floor($downloadedBytes/1024))K of $($totalLength)K): " -PercentComplete ((([System.Math]::Floor($downloadedBytes/1024)) / $totalLength)  * 100)
       }
       Write-Progress -activity "Finished downloading file '$($url.split('/') | Select -Last 1)'"
       $targetStream.Flush()
       $targetStream.Close()
       $responseStream.Dispose()
    }


    Function RemoveIfExists($path) {
        if((Test-Path $path) -eq $True) { Remove-Item $path -recurse; }
    }


    Function RunInstaller($path) {
        Start-Process -FilePath msiexec.exe -ArgumentList /i, $path, /quiet -Wait;
    }


    Function RunInstaller2([String]$path, [String]$extraOption) {
        Start-Process -FilePath msiexec.exe -ArgumentList /a, $path, /quiet, $extraOption -Wait;
    }


    Write-Host "`r`n";

    Write-Host "Step 1/5: Downloading XNA Installer";


    $currentLocation = (Get-Location).ToString();

    $downloadLocation = ($currentLocation + "\XNAGS40_setup.exe");


    if((Test-Path $downloadLocation) -eq $False) {
        Write-Host "  Downloading XNA 4.0 Refresh Installer to $downloadLocation. This may take several minutes.";
        DownloadFile("http://download.microsoft.com/download/E/C/6/EC68782D-872A-4D58-A8D3-87881995CDD4/XNAGS40_setup.exe", $downloadLocation)
    } else {
        Write-Host "  XNA 4.0 Refresh Installer already downloaded. Skipping download step.";
    }


    Write-Host "`r`n";

    Write-Host "Step 2/5: Running Installers";


    Write-Host "  Extracting components from XNA 4.0 Refresh Installer.";

    Start-Process -FilePath $downloadLocation -ArgumentList /extract:XNA, /quiet -Wait;


    Write-Host "  Running Redists.msi";

    RunInstaller("`"$currentLocation\XNA\redists.msi`"");

    $XnaInProgramFiles = "C:\Program Files (x86)\Microsoft XNA";


    Write-Host "  Running XLiveRedist.msi";

    RunInstaller("`"$XnaInProgramFiles\XNA Game Studio\v4.0\Setup\XLiveRedist.msi`"")


    Write-Host "  Running xnafx40_redist.msi";

    RunInstaller("`"$XnaInProgramFiles\XNA Game Studio\v4.0\Redist\XNA FX Redist\xnafx40_redist.msi`"")


    Write-Host "  Running xnaliveproxy.msi";

    RunInstaller("`"$XnaInProgramFiles\XNA Game Studio\v4.0\Setup\xnaliveproxy.msi`"")


    Write-Host "  Running xnags_platform_tools.msi";

    RunInstaller("`"$XnaInProgramFiles\XNA Game Studio\v4.0\Setup\xnags_platform_tools.msi`"")


    Write-Host "  Running xnags_shared.msi";

    RunInstaller("`"$XnaInProgramFiles\XNA Game Studio\v4.0\Setup\xnags_shared.msi`"")


    Write-Host "  Extracting extension files from xnags_visualstudio.msi";

    RunInstaller2 "`"$XnaInProgramFiles\XNA Game Studio\v4.0\Setup\xnags_visualstudio.msi`"" "TARGETDIR=C:\XNA-temp\ExtractedExtensions\"


    Write-Host "  Running arpentry.msi";

    RunInstaller("`"$currentLocation\XNA\arpentry.msi`"")


    Write-Host "`r`n";

    Write-Host "Step 3/5: Downloading GameJolt API";


    $downloadLocation = ($currentLocation + "\2.5DHero.zip");


    if((Test-Path $downloadLocation) -eq $False) {
        Write-Host "  Downloading GameJolt API Installer to $downloadLocation. This may take several minutes.";
        DownloadFile ${env:GameJolt_API} $downloadLocation
    } else {
        Write-Host "  GameJolt API Installer already downloaded. Skipping download step.";
    }


    Write-Host "`r`n";

    Write-Host "Step 4/5: Running Installers"


    Write-Host "  Extracting components from GameJolt API Installer.";

    7z x -y $downloadLocation -o"$currentLocation"


    Write-Host "`r`n";

    Write-Host "Step 5/5: Restart";


    Restart-Computer -Force
cache: XNAGS40_setup.exe
before_build:
- cmd: >-
    git submodule update --init --recursive

    nuget restore 2.5DHero.sln
build:
  project: 2.5DHero.sln
  parallel: true
  verbosity: minimal
before_package:
- ps: >-
    Function RemoveIfExists($path) {
        if((Test-Path $path) -eq $True) { Remove-Item $path -recurse; }
    }


    Write-Host "`r`n";

    Write-Host "Step 1/1: Removing extra build content.";


    $currentLocation = (Get-Location).ToString();


    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\MonoGame\DesktopGL\Release\References")

    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\MonoGame\DesktopGL\Release\2MGFX.exe")

    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\MonoGame\DesktopGL\Release\Assimp64.dll")

    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\MonoGame\DesktopGL\Release\ffmpeg.exe")

    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\MonoGame\DesktopGL\Release\ffprobe.exe")

    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\MonoGame\DesktopGL\Release\FreeImage.dll")

    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\MonoGame\DesktopGL\Release\freetype6.dll")

    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\MonoGame\DesktopGL\Release\libmojoshader_64.dll")

    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\MonoGame\DesktopGL\Release\nvtt.dll")

    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\MonoGame\DesktopGL\Release\pvrtc.dll")

    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\MonoGame\DesktopGL\Release\PVRTexLibWrapper.dll")


    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\XNA\Release\References")

    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\XNA\Release\2MGFX.exe")

    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\XNA\Release\Assimp64.dll")

    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\XNA\Release\ffmpeg.exe")

    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\XNA\Release\ffprobe.exe")

    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\XNA\Release\FreeImage.dll")

    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\XNA\Release\freetype6.dll")

    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\XNA\Release\libmojoshader_64.dll")

    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\XNA\Release\nvtt.dll")

    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\XNA\Release\pvrtc.dll")

    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\XNA\Release\PVRTexLibWrapper.dll")
    
    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\XNA\Release\Microsoft.XNA.Framework.dll")
    
    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\XNA\Release\Microsoft.XNA.Framework.xml")
    
    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\XNA\Release\Microsoft.XNA.Framework.Game.dll")
    
    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\XNA\Release\Microsoft.XNA.Framework.Game.xml")
    
    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\XNA\Release\Microsoft.XNA.Framework.GamerServices.dll")
    
    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\XNA\Release\Microsoft.XNA.Framework.GamerServices.xml")
    
    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\XNA\Release\Microsoft.XNA.Framework.Graphics.dll")
    
    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\XNA\Release\Microsoft.XNA.Framework.Graphics.xml")
    
    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\XNA\Release\Microsoft.Xna.Framework.Input.Touch.dll")
    
    RemoveIfExists($currentLocation + "\2.5DHero\2.5DHero\bin\XNA\Release\Microsoft.Xna.Framework.Input.Touch.xml")
test: off
artifacts:
- path: 2.5DHero/2.5DHero/bin/MonoGame/DesktopGL
  name: MonoGamePokemon
- path: 2.5DHero/2.5DHero/bin/XNA
  name: XNAPokemon
deploy:
- provider: GitHub
  tag: $(appveyor_build_version)
  release: Pokemon 3D Patch Indev $(appveyor_build_version)
  auth_token:
    secure: WqQZ3A0yfpGhgMsEO5+TVJLgJd7WoO9jLjnnHPJww5e0ikdES8hRY1rZCTbY00l/
  artifact: MonoGamePokemon,XNAPokemon
  draft: true
  prerelease: false
  force_update: true
  on:
    branch: master